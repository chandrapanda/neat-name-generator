[{"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/index.js":"1","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/App.js":"2","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/reportWebVitals.js":"3","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/Footer.js":"4","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/Navbar.js":"5","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/Student/StudentTable.js":"6","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/Student/RandomStudent.js":"7","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/student/RandomStudent.js":"8","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/student/StudentTable.js":"9","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/student/NewStudentForm.js":"10","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/student/PreviouslySelected.js":"11"},{"size":535,"mtime":1661221473223,"results":"12","hashOfConfig":"13"},{"size":4702,"mtime":1668492374658,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1661221473223,"results":"15","hashOfConfig":"13"},{"size":1477,"mtime":1668407143578,"results":"16","hashOfConfig":"13"},{"size":1602,"mtime":1668488978858,"results":"17","hashOfConfig":"13"},{"size":1304,"mtime":1668489423624,"results":"18","hashOfConfig":"13"},{"size":1663,"mtime":1668489407089,"results":"19","hashOfConfig":"13"},{"size":1663,"mtime":1668489407089,"results":"20","hashOfConfig":"13"},{"size":1304,"mtime":1668489423624,"results":"21","hashOfConfig":"13"},{"size":1539,"mtime":1668461730211,"results":"22","hashOfConfig":"13"},{"size":1437,"mtime":1668490864971,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1gzgogb",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/index.js",[],[],[],"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/App.js",[],[],"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/reportWebVitals.js",[],[],"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/Footer.js",["61","62"],[],"import * as React from \"react\";\n\n// MUI Imports\nimport {\n  Container,\n  Box,\n  Grid,\n  Typography,\n  List,\n  ListItem,\n  Link,\n} from \"@mui/material\";\n\nconst footerStyle = {\n  container: {\n    backgroundColor: \"#131C47\",\n    //   },\n    //   listText: {\n    //     color: \"#ffffff\",\n    //     fontSize: \"1em\",\n    //     fontFamily: \"Helvetica, sans-serif\",\n    //     lineHeight: \"1em\",\n    //     fontWeight: 100,\n  },\n};\n\nconst Footer = () => {\n  return (\n    <Container sx={footerStyle.container} maxWidth={false}>\n      <Grid container spacing={9} sx={{ padding: 5, mt: 0.2 }}>\n        <Grid item xs={12} sm={12} md={6} lg={6}>\n          <Box>\n            <Typography variant=\"h2\" color=\"primary.contrastText\">\n              Neat-o Name Generator\n            </Typography>\n            <Typography variant=\"p\" color=\"primary.contrastText\">\n              Use this app to call on students at random in your class! This\n              way, all your students participate equally.\n            </Typography>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={6} lg={6}>\n          <Typography variant=\"h2\" color=\"primary.contrastText\">\n            Meet the Developer\n          </Typography>\n          <Link\n            href=\"https://github.com/chandrapanda\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Chandra Holt\n          </Link>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Footer;\n","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/Navbar.js",[],[],"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/Student/StudentTable.js",[],[],"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/Student/RandomStudent.js",[],[],"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/student/RandomStudent.js",[],[],"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/student/StudentTable.js",["63"],[],"import React from \"react\";\nimport {\n  Button,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\n\n//Styling\nconst tableStyle = {\n  backgroundColor: \"white\",\n  width: \"500px\",\n  alignSelf: \"center\",\n  mt: 4,\n  mb: 2,\n};\n\n//Create display table for students\nconst Tableheader = () => {\n  return (\n    <TableHead>\n      <TableBody>\n        <TableRow>\n          <TableCell sx={{ fontSize: 34, fontStyle: \"underline\" }}>\n            Student Names\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </TableHead>\n  );\n};\n\nconst Tablebody = (props) => {\n  const rows = props.studentData.map((student, index) => {\n    return (\n      <TableRow key={index}>\n        <TableCell sx={{ fontSize: 18 }}>{student.name}</TableCell>\n        <TableCell>\n          <Button onClick={() => props.removeStudent(index)}>Delete</Button>\n        </TableCell>\n      </TableRow>\n    );\n  });\n  return <TableBody>{rows}</TableBody>;\n};\n\nconst StudentTable = (props) => {\n  const { studentData, removeStudent } = props;\n  return (\n    <TableContainer sx={tableStyle}>\n      <Table>\n        <Tableheader />\n\n        <Tablebody studentData={studentData} removeStudent={removeStudent} />\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default StudentTable;\n","/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/student/NewStudentForm.js",[],[],"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/student/PreviouslySelected.js",["64"],[],"import React from \"react\";\nimport {\n  Button,\n  Box,\n  Container,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\n\n//Styling\nconst listStyle = {\n  backgroundColor: \"#ffffff\",\n  color: \"black\",\n  width: \"400px\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  mt: 4,\n  mb: 2,\n  flexDirection: \"inherit\",\n};\n\n//show a list of students that have already been selected in the past\nconst PreviouslySelected = (props) => {\n  const { studentData, resetAllToUnselected } = props;\n  return (\n    <Container sx={{ width: \"auto\" }}>\n      <Button\n        id=\"reset-button\"\n        size=\"large\"\n        variant=\"contained\"\n        type=\"submit\"\n        onClick={() => resetAllToUnselected()}\n      >\n        Reset all students\n      </Button>\n      <Grid container sx={listStyle}>\n        <Grid item xs={12} md={6}>\n          <Typography alignSelf=\"center\" variant=\"h2\" component=\"div\">\n            Selected Students Key\n          </Typography>\n          <List>\n            {studentData.map((student, index) => {\n              return (\n                <ListItem key={index}>\n                  <ListItemText\n                    primary={student.name}\n                    secondary={student.selected ? \"Selected\" : null}\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default PreviouslySelected;\n",{"ruleId":"65","severity":1,"message":"66","line":9,"column":3,"nodeType":"67","messageId":"68","endLine":9,"endColumn":7},{"ruleId":"65","severity":1,"message":"69","line":10,"column":3,"nodeType":"67","messageId":"68","endLine":10,"endColumn":11},{"ruleId":"65","severity":1,"message":"70","line":4,"column":3,"nodeType":"67","messageId":"68","endLine":4,"endColumn":7},{"ruleId":"65","severity":1,"message":"71","line":4,"column":3,"nodeType":"67","messageId":"68","endLine":4,"endColumn":6},"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used."]
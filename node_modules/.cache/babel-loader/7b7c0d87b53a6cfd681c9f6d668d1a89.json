{"ast":null,"code":"var _jsxFileName = \"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/StudentList/index.js\";\nimport * as React from \"react\";\nimport { Box, Grid, Typography, List, ListItem, ListItemText } from \"@mui/material\"; // TODO: Create function to map over student names after seeds are ready\n// function displayStudentList() {\n//   return [0, 1, 2].map((value) =>\n//     React.cloneElement(studentName, {\n//       key: value,\n//     })\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet studentNames = [\"Mary\", \"Joaquim\", \"Ahmed\", \"Jules\", \"Tuan\"];\n\nconst StudentList = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 4,\n            mb: 2\n          },\n          variant: \"h6\",\n          component: \"div\",\n          children: \"Text only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: studentNames.map(student => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Single-line item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), \" \", student, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StudentList;\nexport default StudentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","Box","Grid","Typography","List","ListItem","ListItemText","studentNames","StudentList","mt","mb","map","student"],"sources":["/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/StudentList/index.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Grid,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@mui/material\";\n\n// TODO: Create function to map over student names after seeds are ready\n// function displayStudentList() {\n//   return [0, 1, 2].map((value) =>\n//     React.cloneElement(studentName, {\n//       key: value,\n//     })\n//   );\n// }\n\nlet studentNames = [\"Mary\", \"Joaquim\", \"Ahmed\", \"Jules\", \"Tuan\"];\n\nconst StudentList = () => {\n  return (\n    <Box>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <Typography sx={{ mt: 4, mb: 2 }} variant=\"h6\" component=\"div\">\n            Text only\n          </Typography>\n          <List>\n            {studentNames.map((student) => {\n              return (\n                <ListItem>\n                  <ListItemText primary=\"Single-line item\" /> {student}{\" \"}\n                </ListItem>\n              );\n            })}\n          </List>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\nexport default StudentList;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,YANF,QAOO,eAPP,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,YAAY,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,OAA7B,EAAsC,MAAtC,CAAnB;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB,oBACE,QAAC,GAAD;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,MAAf;MAAgB,OAAO,EAAE,CAAzB;MAAA,uBACE,QAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,EAAf;QAAmB,EAAE,EAAE,CAAvB;QAAA,wBACE,QAAC,UAAD;UAAY,EAAE,EAAE;YAAEC,EAAE,EAAE,CAAN;YAASC,EAAE,EAAE;UAAb,CAAhB;UAAkC,OAAO,EAAC,IAA1C;UAA+C,SAAS,EAAC,KAAzD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAIE,QAAC,IAAD;UAAA,UACGH,YAAY,CAACI,GAAb,CAAkBC,OAAD,IAAa;YAC7B,oBACE,QAAC,QAAD;cAAA,wBACE,QAAC,YAAD;gBAAc,OAAO,EAAC;cAAtB;gBAAA;gBAAA;gBAAA;cAAA,QADF,OAC+CA,OAD/C,EACwD,GADxD;YAAA;cAAA;cAAA;cAAA;YAAA,QADF;UAKD,CANA;QADH;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CArBD;;KAAMJ,W;AAsBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}
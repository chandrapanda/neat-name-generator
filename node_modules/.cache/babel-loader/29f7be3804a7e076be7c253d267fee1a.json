{"ast":null,"code":"var _jsxFileName = \"/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/StudentList/index.js\";\nimport * as React from \"react\";\nimport { Box, Grid, Typography, List, ListItem, TextField, FormControl, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fieldStyle = {\n  background: \"white\"\n};\nlet studentNames = [\"Mary Smith\", \"Joaquim Tochtermann\", \"Ahmed Mohammed\", \"Jules Reynolds\", \"Tuan Hong\", \"Bob Ray\", \"Liam Neeson\", \"Jose Gallo\", \"Nicole Herman\"]; // TODO: Create function to map over student names after seeds are ready\n\nconst handleGenerate = () => studentNames.push(); // function displayStudentList() {\n//   return [0, 1, 2].map((value) =>\n//     React.cloneElement(studentName, {\n//       key: value,\n//     })\n//   );\n// }\n\n\nconsole.log(studentNames);\n\nconst StudentList = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"student-name-form\",\n        variant: \"outlined\",\n        label: \"Write a name\",\n        color: \"primary\",\n        sx: fieldStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a student's name and click \\\"GENERATE\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"generate-button\",\n        variant: \"contained\",\n        onClick: (() => alert(\"clicked\"), handleGenerate),\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 4,\n            mb: 2\n          },\n          variant: \"h6\",\n          component: \"div\",\n          children: /*#__PURE__*/_jsxDEV(List, {\n            id: \"student-name-list\",\n            children: studentNames.map(student => {\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [student, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StudentList;\nexport default StudentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","Box","Grid","Typography","List","ListItem","TextField","FormControl","Button","fieldStyle","background","studentNames","handleGenerate","push","console","log","StudentList","alert","mt","mb","map","student"],"sources":["/Users/chandraholt/Desktop/Repositories/neat-name-generator/src/components/StudentList/index.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Grid,\n  Typography,\n  List,\n  ListItem,\n  TextField,\n  FormControl,\n  Button,\n} from \"@mui/material\";\n\nconst fieldStyle = {\n  background: \"white\",\n};\n\nlet studentNames = [\n  \"Mary Smith\",\n  \"Joaquim Tochtermann\",\n  \"Ahmed Mohammed\",\n  \"Jules Reynolds\",\n  \"Tuan Hong\",\n  \"Bob Ray\",\n  \"Liam Neeson\",\n  \"Jose Gallo\",\n  \"Nicole Herman\",\n];\n\n// TODO: Create function to map over student names after seeds are ready\nconst handleGenerate = () => studentNames.push();\n\n\n// function displayStudentList() {\n//   return [0, 1, 2].map((value) =>\n//     React.cloneElement(studentName, {\n//       key: value,\n//     })\n//   );\n// }\n\nconsole.log(studentNames);\n\nconst StudentList = () => {\n  return (\n    <Box>\n      <FormControl>\n        <TextField\n          id=\"student-name-form\"\n          variant=\"outlined\"\n          label=\"Write a name\"\n          color=\"primary\"\n          sx={fieldStyle}\n        ></TextField>\n        <p>Enter a student's name and click \"GENERATE\"</p>\n        <Button\n          id=\"generate-button\"\n          variant=\"contained\"\n          onClick={(() => alert(\"clicked\"), handleGenerate)}\n        >\n          Generate\n        </Button>\n      </FormControl>\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <Typography sx={{ mt: 4, mb: 2 }} variant=\"h6\" component=\"div\">\n            <List id=\"student-name-list\">\n              {studentNames.map((student) => {\n                return <ListItem>{student} </ListItem>;\n              })}\n            </List>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\nexport default StudentList;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,WAPF,EAQEC,MARF,QASO,eATP;;AAWA,MAAMC,UAAU,GAAG;EACjBC,UAAU,EAAE;AADK,CAAnB;AAIA,IAAIC,YAAY,GAAG,CACjB,YADiB,EAEjB,qBAFiB,EAGjB,gBAHiB,EAIjB,gBAJiB,EAKjB,WALiB,EAMjB,SANiB,EAOjB,aAPiB,EAQjB,YARiB,EASjB,eATiB,CAAnB,C,CAYA;;AACA,MAAMC,cAAc,GAAG,MAAMD,YAAY,CAACE,IAAb,EAA7B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;AAEA,MAAMK,WAAW,GAAG,MAAM;EACxB,oBACE,QAAC,GAAD;IAAA,wBACE,QAAC,WAAD;MAAA,wBACE,QAAC,SAAD;QACE,EAAE,EAAC,mBADL;QAEE,OAAO,EAAC,UAFV;QAGE,KAAK,EAAC,cAHR;QAIE,KAAK,EAAC,SAJR;QAKE,EAAE,EAAEP;MALN;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF,eASE,QAAC,MAAD;QACE,EAAE,EAAC,iBADL;QAEE,OAAO,EAAC,WAFV;QAGE,OAAO,GAAG,MAAMQ,KAAK,CAAC,SAAD,CAAX,EAAwBL,cAA3B,CAHT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAmBE,QAAC,IAAD;MAAM,SAAS,MAAf;MAAgB,OAAO,EAAE,CAAzB;MAAA,uBACE,QAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,EAAf;QAAmB,EAAE,EAAE,CAAvB;QAAA,uBACE,QAAC,UAAD;UAAY,EAAE,EAAE;YAAEM,EAAE,EAAE,CAAN;YAASC,EAAE,EAAE;UAAb,CAAhB;UAAkC,OAAO,EAAC,IAA1C;UAA+C,SAAS,EAAC,KAAzD;UAAA,uBACE,QAAC,IAAD;YAAM,EAAE,EAAC,mBAAT;YAAA,UACGR,YAAY,CAACS,GAAb,CAAkBC,OAAD,IAAa;cAC7B,oBAAO,QAAC,QAAD;gBAAA,WAAWA,OAAX;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAP;YACD,CAFA;UADH;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CAlCD;;KAAML,W;AAmCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}